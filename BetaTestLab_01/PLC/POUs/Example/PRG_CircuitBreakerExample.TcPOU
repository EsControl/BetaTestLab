<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="PRG_CircuitBreakerExample" Id="{748950b5-9a94-4fe1-81a2-57158de03b70}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_CircuitBreakerExample
VAR
    // Function Block Instance
    fbCircuitBreaker1: FB_CircuitBreaker;
    
    // Başlangıç konfigürasyonu için flag
    bInitDone: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
// İlk çalıştırma konfigürasyonu
IF NOT bInitDone THEN
    // Konfigürasyon parametreleri
    GVL_HMI.stCircuitBreaker1_HMI.stConfig.sProjectCode := '+EP1-Q1';
    GVL_HMI.stCircuitBreaker1_HMI.stConfig.sProductCode := 'ABB VD4 1250A';
    GVL_HMI.stCircuitBreaker1_HMI.stConfig.rRatedCurrent := 1250.0;
    GVL_HMI.stCircuitBreaker1_HMI.stConfig.rRatedVoltage := 12.0;
    GVL_HMI.stCircuitBreaker1_HMI.stConfig.nPhaseCount := 3;
    GVL_HMI.stCircuitBreaker1_HMI.stConfig.tMotionTimeout := T#5S;
    GVL_HMI.stCircuitBreaker1_HMI.stConfig.tSpringChargeTimeout := T#30S;
    GVL_HMI.stCircuitBreaker1_HMI.stConfig.bSpringChargeRequired := TRUE;
    GVL_HMI.stCircuitBreaker1_HMI.stConfig.dwOperationLimit := 10000;
    
    // Başlangıç bakım sayacı
    GVL_HMI.stCircuitBreaker1_HMI.stStatistics.dwRemainingOperations := GVL_HMI.stCircuitBreaker1_HMI.stConfig.dwOperationLimit;
    
    bInitDone := TRUE;
END_IF

// Function Block Çağrısı
fbCircuitBreaker1(
    // Fiziksel Girişler
    bPositionOn := stCircuitBreaker1_IO.bPositionOn,
    bPositionOff := stCircuitBreaker1_IO.bPositionOff,
    bPositionTripped := stCircuitBreaker1_IO.bPositionTripped,
    bSpringCharged := stCircuitBreaker1_IO.bSpringCharged,
    bPLCControl := stCircuitBreaker1_IO.bPLCControl,
    
    // Güvenlik Girişleri
    bSafetyLoop := GVL_Safety.bSafetyLoop,
    bInterlock := GVL_Safety.bCircuitBreaker1_Interlock,
    
    // Sistem Girişleri
    bMasterReset := GVL_System.bMasterReset,
    
    // HMI Bağlantısı
    stHMI := GVL_HMI.stCircuitBreaker1_HMI,
    
    // Fiziksel Çıkışlar
    bOnCommand => stCircuitBreaker1_IO.bOnCommand,
    bOffCommand => stCircuitBreaker1_IO.bOffCommand
);

// SQL Kayıt İşlemi
IF GVL_HMI.stCircuitBreaker1_HMI.stStatistics.bNewOperationFlag THEN
    // SQL kayıt fonksiyonunu çağır
    GVL_HMI.stCircuitBreaker1_HMI.stStatistics.bNewOperationFlag := FALSE;
END_IF]]></ST>
    </Implementation>
    <LineIds Name="PRG_CircuitBreakerExample">
      <LineId Id="17" Count="47" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>