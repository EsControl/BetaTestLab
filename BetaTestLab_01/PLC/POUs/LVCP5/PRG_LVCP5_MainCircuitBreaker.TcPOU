<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="PRG_LVCP5_MainCircuitBreaker" Id="{0ed1aeba-af4a-4f3d-925f-73fcbf8df83d}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_LVCP5_MainCircuitBreaker
VAR
    // Function Block Instance
    fbCircuitBreaker	: FB_CircuitBreaker;
	
    // IO Structure
    stCircuitBreakerIO	: ST_CircuitBreakerIO;	
    
    // Başlangıç konfigürasyonu için flag
    bInitDone			: BOOL := FALSE;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT bInitDone THEN
	M_Init();
	bInitDone := TRUE;
END_IF

// Function Block Çağrısı
fbCircuitBreaker(
    // Fiziksel Girişler
    bPositionOn 		:= stCircuitBreakerIO.bPositionOn,
    bPositionOff 		:= stCircuitBreakerIO.bPositionOff,
    bPositionTripped 	:= stCircuitBreakerIO.bPositionTripped,
    bSpringCharged 		:= stCircuitBreakerIO.bSpringCharged,
    bPLCControl 		:= stCircuitBreakerIO.bPLCControl,
    
    // Güvenlik Girişleri
    bSafetyLoop 		:= GVL_Alarm.bSafetyLoop,
    bInterlock 			:= FALSE,
    
    // Sistem Girişleri
    bMasterReset 		:= GVL_Alarm.bMasterReset,
    
    // HMI Bağlantısı
    stHMI 				:= GVL_LVCP5.stMainCircuitBreakerHMI,
    
    // Fiziksel Çıkışlar
    bOnCommand 			=> stCircuitBreakerIO.bOnCommand,
    bOffCommand 		=> stCircuitBreakerIO.bOffCommand
);

// SQL Kayıt İşlemi
IF GVL_LVCP5.stMainCircuitBreakerHMI.stStatistics.bNewOperationFlag THEN
    // SQL kayıt fonksiyonunu çağır
    GVL_LVCP5.stMainCircuitBreakerHMI.stStatistics.bNewOperationFlag := FALSE;
END_IF]]></ST>
    </Implementation>
    <Method Name="M_Init" Id="{5874cd22-60a9-4756-a7c9-b15a8f6a9b46}">
      <Declaration><![CDATA[METHOD M_Init : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[    // Konfigürasyon parametreleri
    GVL_LVCP5.stMainCircuitBreakerHMI.stConfig.sProjectCode := '+EP8-6F1';
    GVL_LVCP5.stMainCircuitBreakerHMI.stConfig.sProductCode := 'ETN C63N32D630';
    GVL_LVCP5.stMainCircuitBreakerHMI.stConfig.rRatedCurrent := 630.0;
    GVL_LVCP5.stMainCircuitBreakerHMI.stConfig.rRatedVoltage := 1000.0;
    GVL_LVCP5.stMainCircuitBreakerHMI.stConfig.nPhaseCount := 3;
    GVL_LVCP5.stMainCircuitBreakerHMI.stConfig.tMotionTimeout := T#5S;
    GVL_LVCP5.stMainCircuitBreakerHMI.stConfig.tSpringChargeTimeout := T#30S;
    GVL_LVCP5.stMainCircuitBreakerHMI.stConfig.bSpringChargeRequired := FALSE;
    GVL_LVCP5.stMainCircuitBreakerHMI.stConfig.dwOperationLimit := 10000;
    
    // Başlangıç bakım sayacı
    GVL_LVCP5.stMainCircuitBreakerHMI.stStatistics.dwRemainingOperations := GVL_LVCP5.stMainCircuitBreakerHMI.stConfig.dwOperationLimit;
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="PRG_LVCP5_MainCircuitBreaker">
      <LineId Id="78" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="79" Count="0" />
      <LineId Id="47" Count="27" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="PRG_LVCP5_MainCircuitBreaker.M_Init">
      <LineId Id="8" Count="12" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>