<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="FB_ContactorControl" Id="{21064394-479f-4b44-b3fe-1308ea1b9534}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_ContactorControl
VAR_INPUT
    // Fiziksel Girişler
    bFeedback: BOOL;                            // Kontaktör yardımcı kontak geri bildirimi
    bPLCControl: BOOL;                          // PLC kontrol seçici
    
    // Güvenlik Girişleri
    bSafetyLoop: BOOL;                          // Safety loop
    bInterlock: BOOL;                           // Dış interlock sinyali
    
    // Sistem Girişleri
    bMasterReset: BOOL;                         // Master reset
END_VAR

VAR_OUTPUT
    // Fiziksel Çıkış
    bOutput: BOOL;                              // Kontaktör bobini
END_VAR

VAR_IN_OUT
    stHMI: ST_ContactorHMI;                     // HMI için tüm veriler
END_VAR

VAR
    // Position Machine
    ePosition: E_ContactorPosition;             // İç pozisyon değişkeni
    ePositionPrevious: E_ContactorPosition;     // Önceki pozisyon
    
    // Timer'lar
    tonFeedbackOn: TON;                         // ON geri bildirim timer'ı
    tonFeedbackOff: TON;                        // OFF geri bildirim timer'ı
    tonWeldedCheck: TON;                        // Yapışma kontrol timer'ı
    
    // Edge Detection
    rtrigOnCmd: R_TRIG;                         // ON komut yükselen kenar
    rtrigOffCmd: R_TRIG;                        // OFF komut yükselen kenar
    rtrigResetFault: R_TRIG;                    // Reset yükselen kenar
    rtrigResetStatistics: R_TRIG;               // İstatistik reset yükselen kenar
    rtrigMasterReset: R_TRIG;                   // Master reset yükselen kenar
    
    // İç Değişkenler
    bOnRequest: BOOL;                           // Dahili ON isteği
    bOffRequest: BOOL;                          // Dahili OFF isteği
    bBlock: BOOL;                               // Hareket blokaj
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Edge Detection
rtrigOnCmd(CLK := bOnRequest);
rtrigOffCmd(CLK := bOffRequest);
rtrigResetFault(CLK := stHMI.stCommand.bResetFault OR bMasterReset);
rtrigResetStatistics(CLK := stHMI.stCommand.bResetStatistics);
rtrigMasterReset(CLK := bMasterReset);

// Reset İşlemleri
IF rtrigResetFault.Q THEN
    A_ResetFault();
END_IF

IF rtrigResetStatistics.Q OR rtrigMasterReset.Q THEN
    A_ResetStatistics();
END_IF

// Ana kontrol akışı
A_ModeSelection();      // Mod seçimi ve komut belirleme
A_PositionCheck();      // Pozisyon güncelleme
A_FaultCheck();         // Arıza kontrolü
A_Control();            // Çıkış kontrolü
A_UpdateStatus();       // Status güncelleme

// Önceki pozisyonu sakla
ePositionPrevious := ePosition;]]></ST>
    </Implementation>
    <Action Name="A_Control" Id="{8a8ba2dd-bd84-44c2-992c-c9d539b6669e}">
      <Implementation>
        <ST><![CDATA[// Blokaj şartları
bBlock := 	bInterlock OR 
          	stHMI.stStatus.bFaultActive OR 
          	NOT bSafetyLoop OR
			bOffRequest;

// Kontaktör kontrolü - Set/Reset mantığı ile
M_OutputControl(
    Invert      := FALSE, 
    Momentary   := FALSE, 
    Set         := bOnRequest,
    Reset       := bBlock,  
    Out         => bOutput
);

// Çıkışı status'e kopyala
stHMI.stStatus.bOutput := bOutput;]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_FaultCheck" Id="{10696ee0-2785-4b57-801a-92413f63d124}">
      <Implementation>
        <ST><![CDATA[// Geri bildirim kontrolü (eğer gerekli ise)
IF stHMI.stConfig.bFeedbackRequired THEN
    // ON geri besleme kontrolü - çıkış var ama geri besleme yok
    tonFeedbackOn(IN := bOutput AND NOT bFeedback, PT := stHMI.stConfig.tFeedbackDelay);
    IF tonFeedbackOn.Q THEN
        stHMI.stStatus.bFaultActive := TRUE;
        stHMI.stStatus.eFaultCode := E_ContactorFault.FEEDBACK;
        stHMI.stStatus.wsStatusText := "ARIZA: Kontaktör ON geri besleme hatası";
    END_IF

    // OFF geri besleme kontrolü - çıkış yok ama geri besleme var (yapışma)
    tonFeedbackOff(IN := NOT bOutput AND bFeedback, PT := stHMI.stConfig.tFeedbackDelay);
    IF tonFeedbackOff.Q THEN
        // Daha uzun süre kontrol et - gerçekten yapışma mı?
        tonWeldedCheck(IN := TRUE, PT := stHMI.stConfig.tWeldedDelay);
        IF tonWeldedCheck.Q THEN
            stHMI.stStatus.bFaultActive := TRUE;
            stHMI.stStatus.eFaultCode := E_ContactorFault.WELDED;
            stHMI.stStatus.wsStatusText := "ARIZA: Kontaktör kontakları yapışmış";
        END_IF
    ELSE
        tonWeldedCheck(IN := FALSE);
    END_IF
ELSE
    // Geri bildirim kontrolü yapılmıyor - timer'ları resetle
    tonFeedbackOn(IN := FALSE);
    tonFeedbackOff(IN := FALSE);
    tonWeldedCheck(IN := FALSE);
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_ModeSelection" Id="{a399ab54-d00f-4945-844f-18594b18b2cc}">
      <Implementation>
        <ST><![CDATA[// PLC kontrolü yoksa mod otomatik olarak REMOTE olur
IF NOT bPLCControl THEN
    stHMI.stStatus.eActiveMode := E_ContactorControlMode.REMOTE;
    bOnRequest := FALSE;
    bOffRequest := FALSE;
    stHMI.stCommand.bManualOnCmd := FALSE;
    stHMI.stCommand.bManualOffCmd := FALSE;
    RETURN;
END_IF

// PLC kontrolü varsa komut edilen modu kullan
IF stHMI.stCommand.eControlMode = E_ContactorControlMode.REMOTE THEN
    stHMI.stStatus.eActiveMode := E_ContactorControlMode.AUTO;
ELSE
    stHMI.stStatus.eActiveMode := stHMI.stCommand.eControlMode;
END_IF

// Kontrol moduna göre komut seçimi
CASE stHMI.stStatus.eActiveMode OF
    E_ContactorControlMode.MANUAL:
        bOnRequest := stHMI.stCommand.bManualOnCmd;
        bOffRequest := stHMI.stCommand.bManualOffCmd;
        
    E_ContactorControlMode.AUTO:
        bOnRequest := stHMI.stCommand.bAutoOnCmd;
        bOffRequest := stHMI.stCommand.bAutoOffCmd;
        
    E_ContactorControlMode.REMOTE:
        bOnRequest := stHMI.stCommand.bManualOnCmd;
        bOffRequest := stHMI.stCommand.bManualOffCmd;
END_CASE

// Çift komut kontrolü
IF bOnRequest AND bOffRequest THEN
    bOnRequest := FALSE;
    bOffRequest := FALSE;
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_PositionCheck" Id="{ac0799fd-7921-437b-91b4-4436f1686469}">
      <Implementation>
        <ST><![CDATA[// Kontaktör pozisyon kontrolü
IF stHMI.stConfig.bFeedbackRequired THEN
    // Geri bildirim varsa kullan
    IF bOutput AND bFeedback THEN
        ePosition := E_ContactorPosition.ON;
    ELSIF NOT bOutput AND NOT bFeedback THEN
        ePosition := E_ContactorPosition.OFF;
    ELSE
        // Çıkış var ama geri besleme yok veya tam tersi
        ePosition := E_ContactorPosition.UNDEFINED;
    END_IF
ELSE
    // Geri bildirim yoksa sadece çıkışa göre pozisyon belirle
    IF bOutput THEN
        ePosition := E_ContactorPosition.ON;
    ELSE
        ePosition := E_ContactorPosition.OFF;
    END_IF
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_ResetFault" Id="{0caaebcf-5f70-4b69-96b5-dd154a5ce02a}">
      <Implementation>
        <ST><![CDATA[// Arızaları temizle
stHMI.stStatus.bFaultActive := FALSE;
stHMI.stStatus.eFaultCode := E_ContactorFault.NONE;
stHMI.stStatus.wsStatusText := "";

// Timer'ları resetle
tonFeedbackOn(IN := FALSE);
tonFeedbackOff(IN := FALSE);
tonWeldedCheck(IN := FALSE);]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_ResetStatistics" Id="{e39c65da-f14b-4a10-9b8d-a94270246ac1}">
      <Implementation>
        <ST><![CDATA[// İstatistikleri sıfırla
stHMI.stStatistics.dwOnCount := 0;
stHMI.stStatistics.dwOffCount := 0;
stHMI.stStatistics.dwOperationCount := 0;
stHMI.stStatistics.dwTotalFaultCount := 0;
stHMI.stStatistics.dwFeedbackFaultCount := 0;
stHMI.stStatistics.dwWeldedFaultCount := 0;
stHMI.stStatistics.bNewOperationFlag := FALSE;

// Bakım sayacını sıfırla ve operasyon limitini yeniden yükle
stHMI.stStatistics.dwRemainingOperations := stHMI.stConfig.dwOperationLimit;
stHMI.stStatistics.bMaintenanceRequired := FALSE;]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_UpdateStatus" Id="{5fc1ded8-548b-4dbe-9e9c-c71f2b780446}">
      <Implementation>
        <ST><![CDATA[// PLC Kontrol Durumu
stHMI.stStatus.bPLCControlActive := bPLCControl;

// Aktif Kontrol Modu
stHMI.stStatus.eActiveMode := stHMI.stCommand.eControlMode;

// Pozisyon bilgisini güncelle
stHMI.stStatus.ePosition := ePosition;

// Operasyonel durum belirleme
IF stHMI.stStatus.bFaultActive THEN
    stHMI.stStatus.eStatus := E_ContactorStatus.FAULTED;
ELSIF NOT bPLCControl THEN
    stHMI.stStatus.eStatus := E_ContactorStatus.NO_CONTROL;
ELSIF bInterlock THEN
    stHMI.stStatus.eStatus := E_ContactorStatus.INTERLOCKED;
ELSIF stHMI.stStatistics.bMaintenanceRequired THEN
    stHMI.stStatus.eStatus := E_ContactorStatus.MAINTENANCE;
ELSE
    stHMI.stStatus.eStatus := E_ContactorStatus.READY;
END_IF

// Status text güncelleme
CASE stHMI.stStatus.eStatus OF
    E_ContactorStatus.READY:
        CASE ePosition OF
            E_ContactorPosition.ON: 
                stHMI.stStatus.wsStatusText := "Hazır - Kontaktör ON";
            E_ContactorPosition.OFF: 
                stHMI.stStatus.wsStatusText := "Hazır - Kontaktör OFF";
            E_ContactorPosition.UNDEFINED: 
                stHMI.stStatus.wsStatusText := "Hazır - Durum belirsiz";
        END_CASE
        
    E_ContactorStatus.INTERLOCKED:
        stHMI.stStatus.wsStatusText := "Interlock aktif - Komut bekliyor";
        
    E_ContactorStatus.NO_CONTROL:
        stHMI.stStatus.wsStatusText := "PLC kontrolü yok - Remote modda";
        
    E_ContactorStatus.MAINTENANCE:
        stHMI.stStatus.wsStatusText := "Bakım gerekli!";
        
    E_ContactorStatus.FAULTED:
        ; // Arıza durumunda text zaten A_FaultCheck'te set ediliyor
END_CASE

// İstatistik güncelleme - pozisyon değişiminde
IF ePosition <> ePositionPrevious THEN
    IF ePosition = E_ContactorPosition.ON THEN
        stHMI.stStatistics.dwOnCount := stHMI.stStatistics.dwOnCount + 1;
        stHMI.stStatistics.dwOperationCount := stHMI.stStatistics.dwOperationCount + 1;
    ELSIF ePosition = E_ContactorPosition.OFF AND ePositionPrevious = E_ContactorPosition.ON THEN
        stHMI.stStatistics.dwOffCount := stHMI.stStatistics.dwOffCount + 1;
        stHMI.stStatistics.dwOperationCount := stHMI.stStatistics.dwOperationCount + 1;
    END_IF
    
    // Bakım kontrolü
    stHMI.stStatistics.dwRemainingOperations := stHMI.stConfig.dwOperationLimit - stHMI.stStatistics.dwOperationCount;
    IF stHMI.stStatistics.dwRemainingOperations < 1000 THEN
        stHMI.stStatistics.bMaintenanceRequired := TRUE;
    END_IF
END_IF]]></ST>
      </Implementation>
    </Action>
    <Method Name="M_OutputControl" Id="{4d919093-1441-4004-a396-fdf785675326}">
      <Declaration><![CDATA[METHOD M_OutputControl : BOOL
VAR_INPUT
    Reset: BOOL;
    Invert: BOOL;
    Momentary: BOOL;
    Set: BOOL;
END_VAR
VAR_OUTPUT
    Out: BOOL;
END_VAR
VAR
    ActiveMode: INT;
    OutLast: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Reset THEN
    ActiveMode := 0;
ELSIF Invert THEN
    ActiveMode := 1;
ELSIF Momentary THEN
    ActiveMode := 2;
ELSIF Set THEN
    ActiveMode := 3;    
END_IF

CASE ActiveMode OF
    0: //RESET
        Out := FALSE;
        
    1: // INVERT
        IF Invert AND NOT OutLast THEN
            Out := NOT Out;
        END_IF    
        
        OutLast := Invert;    
                    
    2: //PUSH BUTTON (MOMENTARY)
        IF Momentary THEN
            Out := TRUE;
        ELSE
            Out := FALSE;
        END_IF
    3: // SET
        IF Set THEN
            Out := TRUE;
        END_IF    
END_CASE

M_OutputControl := TRUE;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_ContactorControl">
      <LineId Id="54" Count="23" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_ContactorControl.A_Control">
      <LineId Id="41" Count="3" />
      <LineId Id="56" Count="0" />
      <LineId Id="45" Count="10" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_ContactorControl.A_FaultCheck">
      <LineId Id="24" Count="27" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_ContactorControl.A_ModeSelection">
      <LineId Id="4" Count="35" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_ContactorControl.A_PositionCheck">
      <LineId Id="12" Count="17" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_ContactorControl.A_ResetFault">
      <LineId Id="4" Count="7" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_ContactorControl.A_ResetStatistics">
      <LineId Id="4" Count="10" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_ContactorControl.A_UpdateStatus">
      <LineId Id="4" Count="61" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_ContactorControl.M_OutputControl">
      <LineId Id="80" Count="32" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>