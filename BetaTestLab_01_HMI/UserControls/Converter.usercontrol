<div id="Converter_2" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControl" data-tchmi-creator-viewport-width="300" data-tchmi-creator-viewport-height="150" data-tchmi-width="100" data-tchmi-height="100" data-tchmi-width-unit="%" data-tchmi-height-unit="%" data-tchmi-creator-locked="True">
<div id="ConverterBaseContainer" data-tchmi-type="TcHmi.Controls.System.TcHmiContainer" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-right="0" data-tchmi-bottom="0">
<div id="ConverterInputContactor" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControlHost" data-tchmi-height="30" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-target-user-control="UserControls/Contactor/Contactor.usercontrol" data-tchmi-top="35" data-tchmi-top-unit="%" data-tchmi-width="20" data-tchmi-width-unit="%" data-tchmi-data="%pp%Data::stInputContactor|BindingMode=TwoWay%/pp%">
<script data-tchmi-target-attribute="data-tchmi-color" type="application/json">
{
  "color": "rgba(255, 0, 0, 1)"
}
</script>

</div>
<div id="ConverterContainer" data-tchmi-type="TcHmi.Controls.System.TcHmiContainer" data-tchmi-height-unit="%" data-tchmi-left="25" data-tchmi-left-unit="%" data-tchmi-top="20" data-tchmi-top-unit="%" data-tchmi-width="35" data-tchmi-width-unit="%" data-tchmi-bottom="20" data-tchmi-bottom-unit="%">

<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "None"
}
</script>
<div id="ConverterRectangle" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiRectangle" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-right="0" data-tchmi-bottom="0" data-tchmi-creator-visibility="Collapsed">
</div>
<div id="ConverterContainerLine" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiLine" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-x2="200" data-tchmi-y2="0" data-tchmi-right="0" data-tchmi-bottom="0" data-tchmi-scale-mode="ScaleToFill" data-tchmi-y1="200" data-tchmi-creator-visibility="Visible" data-tchmi-bottom-unit="%">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "ConverterContainerLine.onPressed",
    "actions": [
      {
        "objectType": "ControlApiFunction",
        "active": false,
        "control": "TcHmiPopup",
        "fn": "open",
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="ConverterInputPhaseText" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="26" data-tchmi-height-unit="px" data-tchmi-left="20" data-tchmi-left-unit="%" data-tchmi-text="3~" data-tchmi-top="20" data-tchmi-top-unit="%" data-tchmi-width="20" data-tchmi-width-unit="%" data-tchmi-word-wrap="true" data-tchmi-creator-visibility="Visible">
</div>
<div id="ConverterOutputPhaseText" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="26" data-tchmi-height-unit="px" data-tchmi-text="3~" data-tchmi-width="20" data-tchmi-width-unit="%" data-tchmi-word-wrap="true" data-tchmi-creator-visibility="Visible" data-tchmi-right="20" data-tchmi-bottom="20" data-tchmi-right-unit="%" data-tchmi-bottom-unit="%" data-tchmi-text-horizontal-alignment="Right">
</div>
</div>
<div id="ConverterHeader" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="20" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%pp%HeaderText%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-word-wrap="true" data-tchmi-right="0" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-horizontal-alignment="Center" data-tchmi-right-unit="%">
</div>
<div id="ConverterOutputContactor" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControlHost" data-tchmi-height="30" data-tchmi-height-unit="%" data-tchmi-target-user-control="UserControls/Contactor/Contactor.usercontrol" data-tchmi-top="35" data-tchmi-top-unit="%" data-tchmi-width="20" data-tchmi-width-unit="%" data-tchmi-right="0" data-tchmi-data="%pp%Data::stOutputContactor|BindingMode=TwoWay%/pp%">
<script data-tchmi-target-attribute="data-tchmi-color" type="application/json">
{
  "color": "rgba(255, 0, 0, 1)"
}
</script>


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%ctrl%ConverterOutputContactor::Data::bOpen%/ctrl%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%ctrl%CustomLine_29::IsActive%/ctrl%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "Condition",
                "active": true,
                "parts": [
                  {
                    "if": [
                      {
                        "compare1": {
                          "objectType": "Symbol",
                          "valueType": "tchmi:general#/definitions/BOOL",
                          "symbolExpression": "%ctrl%ConverterOutputContactor::Data::bOpen%/ctrl%"
                        },
                        "compare2": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:general#/definitions/BOOL",
                          "value": false
                        },
                        "compareOperator": "==",
                        "logic": null
                      }
                    ],
                    "then": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%pp%IsActiveOutput%/pp%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:general#/definitions/BOOL",
                          "value": true
                        },
                        "asyncWait": true
                      }
                    ]
                  },
                  {
                    "else": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%pp%IsActiveOutput%/pp%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:general#/definitions/BOOL",
                          "value": false
                        },
                        "asyncWait": true
                      }
                    ]
                  }
                ],
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%IsActiveOutput%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="ConverterVoltageOutput" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="20" data-tchmi-height-unit="%" data-tchmi-left="60" data-tchmi-left-unit="%" data-tchmi-text="Voltage" data-tchmi-top="30" data-tchmi-top-unit="%" data-tchmi-width="20" data-tchmi-width-unit="%" data-tchmi-word-wrap="true">
</div>
<div id="ConverterFrequencyOutput" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="20" data-tchmi-height-unit="%" data-tchmi-left="60" data-tchmi-left-unit="%" data-tchmi-text="Textblock" data-tchmi-top-unit="%" data-tchmi-width="20" data-tchmi-width-unit="%" data-tchmi-word-wrap="true" data-tchmi-bottom="30">
</div>

<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 1,
  "right": 1,
  "top": 1,
  "bottom": 1,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
{
  "left": "Dashed",
  "right": "Dashed",
  "top": "Dashed",
  "bottom": "Dashed"
}
</script>
<div id="TcHmiContainer_2" data-tchmi-type="TcHmi.Controls.System.TcHmiContainer" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="25" data-tchmi-left-unit="%" data-tchmi-top="0" data-tchmi-top-unit="%" data-tchmi-width="55" data-tchmi-width-unit="%">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiContainer_2.onPressed",
    "actions": [
      {
        "objectType": "ControlApiFunction",
        "active": true,
        "control": "TcHmiPopup",
        "fn": "open",
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
</div>
<div id="TcHmiPopup" data-tchmi-type="TcHmi.Controls.System.TcHmiPopup" data-tchmi-height-unit="px" data-tchmi-left="153" data-tchmi-left-unit="px" data-tchmi-top="201" data-tchmi-top-unit="px" data-tchmi-width="1200" data-tchmi-width-unit="px" data-tchmi-modal="true" data-tchmi-height="800" data-tchmi-header-text="Converter popup">

<script data-tchmi-target-attribute="data-tchmi-target-file" type="application/json">
{
  "path": "UserControls/ConverterPopups/ConverterPopup.usercontrol",
  "attributes": {
    "data-tchmi-data": "%pp%Data%/pp%"
  }
}
</script>
</div>
<div id="ConverterLock_3" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="15" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="🔒" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-word-wrap="true" data-tchmi-width="15" data-tchmi-width-unit="px" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center" data-tchmi-visibility="%f%if(%pp%IsLock%/pp%) { 'Visible' }
else { 'Hidden' }%/f%">
</div>
<div id="ConverterEmergencyStopIcon_3" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="15" data-tchmi-height-unit="px" data-tchmi-left-unit="px" data-tchmi-text="🚨" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="15" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-right="0" data-tchmi-visibility="%f%if(%i%EmergencyStop%/i%){'Visible'}
else { 'Hidden' }%/f%">
</div>
<div id="ConverterNonLock_3" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="15" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="🔓" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="15" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center" data-tchmi-visibility="%f%if(%pp%IsLock%/pp%) { 'Hidden' }
else { 'Visible' }%/f%">


</div>
<div id="CustomLine_28" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControlHost" data-tchmi-height="2" data-tchmi-height-unit="px" data-tchmi-left="20" data-tchmi-left-unit="%" data-tchmi-target-user-control="UserControls/CustomLine.usercontrol" data-tchmi-top="50" data-tchmi-top-unit="%" data-tchmi-width="5" data-tchmi-width-unit="%" data-tchmi-isactive="%f%%ctrl%ConverterInputContactor::stContactorHmi::stStatus::ePosition%/ctrl%==3 && %pp%IsActive%/pp%%/f%">
</div>
<div id="CustomLine_29" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControlHost" data-tchmi-height="2" data-tchmi-height-unit="px" data-tchmi-left="60" data-tchmi-left-unit="%" data-tchmi-target-user-control="UserControls/CustomLine.usercontrol" data-tchmi-top="50" data-tchmi-top-unit="%" data-tchmi-width="20" data-tchmi-width-unit="%" data-tchmi-isactive="%ctrl%CustomLine_28::IsActive%/ctrl%">


</div>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "Converter_2.onAttached",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%ctrl%CustomLine_29::IsActive%/ctrl%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "Condition",
                "active": true,
                "parts": [
                  {
                    "if": [
                      {
                        "compare1": {
                          "objectType": "Symbol",
                          "valueType": "tchmi:general#/definitions/String",
                          "symbolExpression": "%ctrl%ConverterOutputContactor::stContactorHmi::stStatus::ePosition%/ctrl%"
                        },
                        "compare2": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:server#/definitions/PLC1.E_ContactorPosition",
                          "value": 2
                        },
                        "compareOperator": "==",
                        "logic": null
                      }
                    ],
                    "then": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%pp%IsActiveOutput%/pp%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:general#/definitions/BOOL",
                          "value": true
                        },
                        "asyncWait": true
                      }
                    ]
                  },
                  {
                    "else": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%pp%IsActiveOutput%/pp%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:general#/definitions/BOOL",
                          "value": false
                        },
                        "asyncWait": true
                      }
                    ]
                  }
                ],
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%IsActiveOutput%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  },
  {
    "event": "%ctrl%CustomLine_29::IsActive%/ctrl%",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%IsActiveOutput%/pp%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/BOOL",
          "value": true
        },
        "asyncWait": true
      },
      {
        "objectType": "Condition",
        "active": false,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%ctrl%CustomLine_29::IsActive%/ctrl%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "Condition",
                "active": true,
                "parts": [
                  {
                    "if": [
                      {
                        "compare1": {
                          "objectType": "Symbol",
                          "valueType": "tchmi:general#/definitions/BOOL",
                          "symbolExpression": "%ctrl%ConverterOutputContactor::IsOpen%/ctrl%"
                        },
                        "compare2": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:general#/definitions/BOOL",
                          "value": false
                        },
                        "compareOperator": "==",
                        "logic": null
                      }
                    ],
                    "then": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%pp%IsActiveOutput%/pp%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:general#/definitions/BOOL",
                          "value": true
                        },
                        "asyncWait": true
                      }
                    ]
                  },
                  {
                    "else": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%pp%IsActiveOutput%/pp%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:general#/definitions/BOOL",
                          "value": false
                        },
                        "asyncWait": true
                      }
                    ]
                  }
                ],
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%IsActiveOutput%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>