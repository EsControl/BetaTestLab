<div id="TemperatureDisplay_3" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControl" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="100" data-tchmi-height="100" data-tchmi-width-unit="%" data-tchmi-height-unit="%" data-tchmi-creator-viewport-width="1000" data-tchmi-creator-viewport-height="600">
<div id="TcHmiGrid_10" data-tchmi-type="TcHmi.Controls.System.TcHmiGrid" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="0" data-tchmi-bottom="0" data-tchmi-creator-visibility="Visible">

<script data-tchmi-target-attribute="data-tchmi-column-options" type="application/json">
[
  {
    "width": 4.0,
    "widthUnit": "factor",
    "widthMode": "Value",
    "maxWidthUnit": "px",
    "minWidthUnit": "px",
    "overflow": false
  },
  {
    "width": 1.0,
    "widthUnit": "factor",
    "widthMode": "Value",
    "maxWidthUnit": "px",
    "minWidthUnit": "px",
    "overflow": false
  },
  {
    "width": 1.0,
    "widthUnit": "factor",
    "widthMode": "Value",
    "maxWidthUnit": "px",
    "minWidthUnit": "px",
    "overflow": false
  },
  {
    "width": 1.0,
    "widthUnit": "factor",
    "widthMode": "Value",
    "maxWidthUnit": "px",
    "minWidthUnit": "px",
    "overflow": false
  }
]
</script>
<div id="TcHmiLineChart_3" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiLineChart" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-x-axis-name="x Axis  1" data-tchmi-x-main-tick-max-value="%s%PLC1.TemperatureDisplay.nXMainTickMaxValue%/s%" data-tchmi-x-main-tick-min-value="0" data-tchmi-x-sub-tick-steps="4" data-tchmi-y-sub-tick-steps="4" data-tchmi-right="0" data-tchmi-bottom="0" data-tchmi-show-legend="false" data-tchmi-show-x-axis="true" data-tchmi-x-show-labels="true" data-tchmi-x-logarithmic-scale="false" data-tchmi-x-axis-labeling="Number" data-tchmi-x-main-tick-steps="11" data-tchmi-show-x-axis-name="false" data-tchmi-show-grid="true" data-tchmi-grid-show-horizontal-lines="true" data-tchmi-grid-line-style="Dashed" data-tchmi-legend-font-size="12" data-tchmi-reference-lines-position="Background" data-tchmi-subgrid-show-horizontal-lines="false" data-tchmi-x-axis-unit="dk" data-tchmi-y-main-tick-steps="11" data-tchmi-is-enabled="true" data-tchmi-x-axis-decimal-places="2" data-tchmi-line-graph-data="%pp%arrDisplayTemperatureValueArray%/pp%">
<script data-tchmi-target-attribute="data-tchmi-y-axis" type="application/json">
[
  {
    "id": 1,
    "showAxis": true,
    "position": "Left",
    "logarithmicScale": false,
    "axisLabeling": "Number",
    "showLabels": true,
    "showAxisName": false,
    "axisName": "y Axis 1",
    "axisNameFontSize": 15,
    "axisNameFontSizeUnit": "px",
    "axisNameFontWeight": "Bold",
    "decimalPlaces": 2,
    "autoScaling": false,
    "unit": "Â°C",
    "labelFontColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::YAxisLabelFontColor%/tr%",
    "axisColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::YAxisAxisColor%/tr%",
    "axisNameFontColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::YAxisAxisNameFontColor%/tr%",
    "mainTickMinValue": "%f%0 //%s%PLC1.TemperatureDisplay.nYMainTickMinValue%/s%%/f%",
    "mainTickMaxValue": "%f%150 //%s%PLC1.TemperatureDisplay.nYMainTickMaxValue%/s%%/f%"
  }
]
</script>






<script data-tchmi-target-attribute="data-tchmi-line-graph-descriptions" type="application/json">
[
  {
    "yAxisId": 1,
    "pointDot": false,
    "pointDotRadius": 3,
    "pointDotStrokeWidth": 1,
    "lineColor": {
      "color": "rgba(0, 255, 61, 1)"
    },
    "fillTransparency": 50.0,
    "pointDotFillColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotFillColor%/tr%",
    "pointDotStrokeColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotStrokeColor%/tr%",
    "fillColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionFillColor%/tr%",
    "lineWidth": "%pp%stDisplayTemperature::temp1Environment1::nLineWidth%/pp%",
    "xScaleFactor": "%s%PLC1.TemperatureDisplay.nXScaleFactor%/s%"
  },
  {
    "yAxisId": 1,
    "pointDot": false,
    "pointDotRadius": 3,
    "pointDotStrokeWidth": 1,
    "lineColor": {
      "color": "rgba(255, 255, 255, 1)"
    },
    "fillTransparency": 50.0,
    "pointDotFillColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotFillColor%/tr%",
    "pointDotStrokeColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotStrokeColor%/tr%",
    "fillColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionFillColor%/tr%",
    "lineWidth": "%pp%stDisplayTemperature::temp2Environment2::nLineWidth%/pp%",
    "xScaleFactor": "%f%%s%PLC1.TemperatureDisplay.nXScaleFactor%/s%%/f%"
  },
  {
    "yAxisId": 1,
    "pointDot": false,
    "pointDotRadius": 3,
    "pointDotStrokeWidth": 1,
    "lineColor": {
      "color": "rgba(0, 255, 244, 1)"
    },
    "fillTransparency": 50.0,
    "pointDotFillColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotFillColor%/tr%",
    "pointDotStrokeColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotStrokeColor%/tr%",
    "fillColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionFillColor%/tr%",
    "lineWidth": "%pp%stDisplayTemperature::temp3Environment3::nLineWidth%/pp%",
    "xScaleFactor": "%f%%s%PLC1.TemperatureDisplay.nXScaleFactor%/s%%/f%"
  },
  {
    "yAxisId": 1,
    "pointDot": false,
    "pointDotRadius": 3,
    "pointDotStrokeWidth": 1,
    "lineColor": {
      "color": "rgba(101, 0, 255, 1)"
    },
    "fillTransparency": 50.0,
    "pointDotFillColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotFillColor%/tr%",
    "pointDotStrokeColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotStrokeColor%/tr%",
    "fillColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionFillColor%/tr%",
    "lineWidth": "%pp%stDisplayTemperature::temp4Environment4::nLineWidth%/pp%",
    "xScaleFactor": "%f%%s%PLC1.TemperatureDisplay.nXScaleFactor%/s%%/f%"
  },
  {
    "yAxisId": 1,
    "pointDot": false,
    "pointDotRadius": 3,
    "pointDotStrokeWidth": 1,
    "lineColor": {
      "color": "rgba(0, 255, 153, 1)"
    },
    "fillTransparency": 50.0,
    "pointDotFillColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotFillColor%/tr%",
    "pointDotStrokeColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotStrokeColor%/tr%",
    "fillColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionFillColor%/tr%",
    "lineWidth": "%pp%stDisplayTemperature::temp5LovVoltageLowTemperature::nLineWidth%/pp%",
    "xScaleFactor": "%f%%s%PLC1.TemperatureDisplay.nXScaleFactor%/s%%/f%"
  },
  {
    "yAxisId": 1,
    "pointDot": false,
    "pointDotRadius": 3,
    "pointDotStrokeWidth": 1,
    "lineColor": {
      "color": "rgba(255, 244, 0, 1)"
    },
    "fillTransparency": 50.0,
    "pointDotFillColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotFillColor%/tr%",
    "pointDotStrokeColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotStrokeColor%/tr%",
    "fillColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionFillColor%/tr%",
    "lineWidth": "%pp%stDisplayTemperature::temp6LovVoltageHighTemperature::nLineWidth%/pp%",
    "xScaleFactor": "%f%%s%PLC1.TemperatureDisplay.nXScaleFactor%/s%%/f%"
  },
  {
    "yAxisId": 1,
    "pointDot": false,
    "pointDotRadius": 3,
    "pointDotStrokeWidth": 1,
    "lineColor": {
      "color": "rgba(255, 0, 0, 1)"
    },
    "fillTransparency": 50.0,
    "pointDotFillColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotFillColor%/tr%",
    "pointDotStrokeColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotStrokeColor%/tr%",
    "fillColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionFillColor%/tr%",
    "lineWidth": "%pp%stDisplayTemperature::temp7HighVoltageLowTemperature::nLineWidth%/pp%",
    "xScaleFactor": "%f%%s%PLC1.TemperatureDisplay.nXScaleFactor%/s%%/f%"
  },
  {
    "yAxisId": 1,
    "pointDot": false,
    "pointDotRadius": 3,
    "pointDotStrokeWidth": 1,
    "lineColor": {
      "color": "rgba(0, 30, 255, 1)"
    },
    "fillTransparency": 50.0,
    "pointDotFillColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotFillColor%/tr%",
    "pointDotStrokeColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotStrokeColor%/tr%",
    "fillColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionFillColor%/tr%",
    "lineWidth": "%pp%stDisplayTemperature::temp8HighVoltageHighTemperature::nLineWidth%/pp%",
    "xScaleFactor": "%f%%s%PLC1.TemperatureDisplay.nXScaleFactor%/s%%/f%"
  },
  {
    "yAxisId": 1,
    "pointDot": false,
    "pointDotRadius": 3,
    "pointDotStrokeWidth": 1,
    "lineColor": {
      "color": "rgba(224, 0, 255, 1)"
    },
    "fillTransparency": 50.0,
    "pointDotFillColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotFillColor%/tr%",
    "pointDotStrokeColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionPointDotStrokeColor%/tr%",
    "fillColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiLineChart::LineGraphDescriptionFillColor%/tr%",
    "lineWidth": "%pp%stDisplayTemperature::temp9TopOilTemperature::nLineWidth%/pp%",
    "xScaleFactor": "%f%%s%PLC1.TemperatureDisplay.nXScaleFactor%/s%%/f%"
  }
]
</script>
</div>
<div id="TcHmiGrid_11" data-tchmi-type="TcHmi.Controls.System.TcHmiGrid" data-tchmi-grid-column-index="1" data-tchmi-grid-row-index="0" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="0" data-tchmi-bottom="0">



<script data-tchmi-target-attribute="data-tchmi-row-options" type="application/json">
[
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeightUnit": "px",
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeightUnit": "px",
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeightUnit": "px",
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeightUnit": "px",
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeightUnit": "px",
    "minHeightUnit": "px",
    "overflow": false
  }
]
</script>
<div data-tchmi-grid-row-index="0" data-tchmi-grid-column-index="0" id="TcHmiCheckbox_27" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiCheckbox" data-tchmi-height-unit="px" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="5" data-tchmi-state-symbol="%pp%stDisplayTemperature::temp1Environment1::bActive%/pp%" data-tchmi-width="15" data-tchmi-height="15" data-tchmi-zindex="2">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiCheckbox_27.onToggleStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": false,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div data-tchmi-grid-row-index="0" data-tchmi-grid-column-index="0" id="TcHmiButton_15" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height-unit="px" data-tchmi-left="5" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-right="5" data-tchmi-bottom="0" data-tchmi-text="Ortam 1" data-tchmi-creator-visibility="Visible">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_15.onPressed",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%pp%stDisplayTemperature::temp1Environment1::bActive%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::temp1Environment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::temp1Environment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div data-tchmi-grid-column-index="0" id="TcHmiCheckbox_2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiCheckbox" data-tchmi-height-unit="px" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="5" data-tchmi-state-symbol="%pp%stDisplayTemperature::temp3Environment3::bActive%/pp%" data-tchmi-grid-row-index="1" data-tchmi-width="15" data-tchmi-height="15" data-tchmi-zindex="2">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiCheckbox_2.onToggleStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": false,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_17" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-grid-column-index="0" data-tchmi-grid-row-index="1" data-tchmi-height-unit="px" data-tchmi-left="5" data-tchmi-left-unit="px" data-tchmi-text="Ortam 3" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-right="5" data-tchmi-bottom="0" data-tchmi-creator-visibility="Visible">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_17.onPressed",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%pp%stDisplayTemperature::temp3Environment3::bActive%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::temp3Environment3::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::temp3Environment3::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div data-tchmi-grid-column-index="0" id="TcHmiCheckbox_4" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiCheckbox" data-tchmi-height-unit="px" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="5" data-tchmi-state-symbol="%pp%stDisplayTemperature::temp5LovVoltageLowTemperature::bActive%/pp%" data-tchmi-grid-row-index="2" data-tchmi-width="15" data-tchmi-height="15" data-tchmi-zindex="2">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiCheckbox_4.onToggleStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": false,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_19" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-grid-column-index="0" data-tchmi-grid-row-index="2" data-tchmi-height-unit="px" data-tchmi-left="5" data-tchmi-left-unit="px" data-tchmi-text="AG ALT SICAKLIK" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-right="5" data-tchmi-bottom="0" data-tchmi-creator-visibility="Visible">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_19.onPressed",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%pp%stDisplayTemperature::temp5LovVoltageLowTemperature::bActive%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::temp5LovVoltageLowTemperature::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::temp5LovVoltageLowTemperature::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div data-tchmi-grid-column-index="0" id="TcHmiCheckbox_6" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiCheckbox" data-tchmi-height-unit="px" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="5" data-tchmi-state-symbol="%pp%stDisplayTemperature::temp7HighVoltageLowTemperature::bActive%/pp%" data-tchmi-grid-row-index="3" data-tchmi-width="15" data-tchmi-height="15" data-tchmi-zindex="2">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiCheckbox_6.onToggleStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": false,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_21" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-grid-column-index="0" data-tchmi-grid-row-index="3" data-tchmi-height-unit="px" data-tchmi-left="5" data-tchmi-left-unit="px" data-tchmi-text="YG ALT SICAKLIK" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-right="5" data-tchmi-bottom="0" data-tchmi-creator-visibility="Visible">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_21.onPressed",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%pp%stDisplayTemperature::temp7HighVoltageLowTemperature::bActive%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::temp7HighVoltageLowTemperature::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::temp7HighVoltageLowTemperature::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div data-tchmi-grid-column-index="0" id="TcHmiCheckbox_8" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiCheckbox" data-tchmi-height-unit="px" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="5" data-tchmi-state-symbol="%pp%stDisplayTemperature::temp9TopOilTemperature::bActive%/pp%" data-tchmi-grid-row-index="4" data-tchmi-width="15" data-tchmi-height="15" data-tchmi-zindex="2">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiCheckbox_8.onToggleStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": false,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_33" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-grid-column-index="0" data-tchmi-grid-row-index="4" data-tchmi-height-unit="px" data-tchmi-left="5" data-tchmi-left-unit="px" data-tchmi-text="ÃST YAÄ SICAKLIÄI" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-right="5" data-tchmi-bottom="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_33.onPressed",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%pp%stDisplayTemperature::temp9TopOilTemperature::bActive%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::temp9TopOilTemperature::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::temp9TopOilTemperature::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
</div>
<div id="TcHmiGrid_29" data-tchmi-type="TcHmi.Controls.System.TcHmiGrid" data-tchmi-grid-column-index="2" data-tchmi-grid-row-index="0" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="0" data-tchmi-bottom="0">

<script data-tchmi-target-attribute="data-tchmi-row-options" type="application/json">
[
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeightUnit": "px",
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeightUnit": "px",
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeightUnit": "px",
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeightUnit": "px",
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeightUnit": "px",
    "minHeightUnit": "px",
    "overflow": false
  }
]
</script>
<div id="TcHmiCheckbox_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiCheckbox" data-tchmi-height-unit="px" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="5" data-tchmi-state-symbol="%pp%stDisplayTemperature::temp2Environment2::bActive%/pp%" data-tchmi-grid-row-index="0" data-tchmi-width="15" data-tchmi-height="15" data-tchmi-zindex="2">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiCheckbox_1.onToggleStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": false,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_16" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-grid-column-index="0" data-tchmi-grid-row-index="0" data-tchmi-height-unit="px" data-tchmi-left="5" data-tchmi-left-unit="px" data-tchmi-text="Ortam 2" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-right="5" data-tchmi-bottom="0" data-tchmi-creator-visibility="Visible">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_16.onPressed",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%pp%stDisplayTemperature::temp2Environment2::bActive%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::temp2Environment2::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::temp2Environment2::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div data-tchmi-grid-column-index="0" id="TcHmiCheckbox_3" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiCheckbox" data-tchmi-height-unit="px" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="5" data-tchmi-state-symbol="%pp%stDisplayTemperature::temp4Environment4::bActive%/pp%" data-tchmi-grid-row-index="1" data-tchmi-width="15" data-tchmi-height="15" data-tchmi-zindex="2">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiCheckbox_3.onToggleStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": false,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_18" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-grid-column-index="0" data-tchmi-grid-row-index="1" data-tchmi-height-unit="px" data-tchmi-left="5" data-tchmi-left-unit="px" data-tchmi-text="Ortam 4" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-right="5" data-tchmi-bottom="0" data-tchmi-creator-visibility="Visible">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_18.onPressed",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%pp%stDisplayTemperature::temp4Environment4::bActive%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::temp4Environment4::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::temp4Environment4::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div data-tchmi-grid-column-index="0" id="TcHmiCheckbox_5" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiCheckbox" data-tchmi-height-unit="px" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="5" data-tchmi-state-symbol="%pp%stDisplayTemperature::temp6LovVoltageHighTemperature::bActive%/pp%" data-tchmi-grid-row-index="2" data-tchmi-width="15" data-tchmi-height="15" data-tchmi-zindex="2">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiCheckbox_5.onToggleStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": false,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_20" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-grid-column-index="0" data-tchmi-grid-row-index="2" data-tchmi-height-unit="px" data-tchmi-left="5" data-tchmi-left-unit="px" data-tchmi-text="AG ÃST SICAKLIK" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-right="5" data-tchmi-bottom="0" data-tchmi-creator-visibility="Visible">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_20.onPressed",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%pp%stDisplayTemperature::temp6LovVoltageHighTemperature::bActive%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::temp6LovVoltageHighTemperature::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::temp6LovVoltageHighTemperature::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div data-tchmi-grid-column-index="0" id="TcHmiCheckbox_7" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiCheckbox" data-tchmi-height-unit="px" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="5" data-tchmi-state-symbol="%pp%stDisplayTemperature::temp8HighVoltageHighTemperature::bActive%/pp%" data-tchmi-grid-row-index="3" data-tchmi-width="15" data-tchmi-height="15" data-tchmi-zindex="2">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiCheckbox_7.onToggleStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": false,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::tempEnvironment1::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_22" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-grid-column-index="0" data-tchmi-grid-row-index="3" data-tchmi-height-unit="px" data-tchmi-left="5" data-tchmi-left-unit="px" data-tchmi-text="YG ÃST SICAKLIK" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-right="5" data-tchmi-bottom="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_22.onPressed",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%pp%stDisplayTemperature::temp8HighVoltageHighTemperature::bActive%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::temp8HighVoltageHighTemperature::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%pp%stDisplayTemperature::temp8HighVoltageHighTemperature::bActive%/pp%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_34" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-grid-column-index="0" data-tchmi-grid-row-index="4" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-text="ð" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-right="10" data-tchmi-bottom="10" data-tchmi-text-font-size="30">

<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 0,
  "right": 0,
  "top": 0,
  "bottom": 0,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 50.0,
  "topRight": 50.0,
  "bottomLeft": 50.0,
  "bottomRight": 50.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_34.onPressed",
    "actions": [
      {
        "objectType": "Comment",
        "comment": "bRefreshStDisplayTemperature ile stDisplayTemperature deÄerlerini sÄ±fÄ±rlamasÄ± iÃ§in"
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%s%PLC1.TemperatureDisplay.bRefreshStDisplayTemperature%/s%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/BOOL",
          "value": true
        },
        "asyncWait": true
      },
      {
        "objectType": "Comment",
        "comment": "bGetValuesFromDb ile db'den verileri Ã§eken kod bloÄunu tetiklemek iÃ§in"
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%s%PLC1.TemperatureDisplay.bGetValuesFromDb%/s%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/BOOL",
          "value": true
        },
        "asyncWait": true
      },
      {
        "objectType": "JavaScript",
        "active": false,
        "sourceLines": [
          "var startDateInput = document.getElementById(\"StartDateInput\");",
          "if (startDateInput) {",
          "    var startDateValue = startDateInput.value;",
          "    console.log(startDateValue);",
          "}"
        ],
        "injectContextObject": false,
        "asyncWait": true,
        "waitMode": "Synchronous"
      }
    ]
  }
]
</script>

<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 166, 237, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(0, 166, 237, 1)"
}
</script>
</div>
</div>
<div id="TcHmiGrid_30" data-tchmi-type="TcHmi.Controls.System.TcHmiGrid" data-tchmi-grid-column-index="3" data-tchmi-grid-row-index="0" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="0" data-tchmi-bottom="0">

<script data-tchmi-target-attribute="data-tchmi-row-options" type="application/json">
[
  {
    "height": 3.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeightUnit": "px",
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 3.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeightUnit": "px",
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 2.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeightUnit": "px",
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 2.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeightUnit": "px",
    "minHeightUnit": "px",
    "overflow": false
  }
]
</script>
<div id="TcHmiButton_23" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-grid-column-index="0" data-tchmi-grid-row-index="2" data-tchmi-height-unit="px" data-tchmi-left="5" data-tchmi-left-unit="px" data-tchmi-text="Rapor OluÅtur" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-word-wrap="true" data-tchmi-right="5" data-tchmi-bottom="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>
</div>
<div id="TcHmiButton_24" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-grid-column-index="0" data-tchmi-grid-row-index="3" data-tchmi-height-unit="px" data-tchmi-left="5" data-tchmi-left-unit="px" data-tchmi-text="Excel'e Aktar" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-right="5" data-tchmi-bottom="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_24.onPressed",
    "actions": [
      {
        "objectType": "Function",
        "active": false,
        "fn": "TcHmi.Functions.TestLabHMI.ExportToExcel",
        "fnParams": [
          {
            "objectType": "Symbol",
            "valueType": "tchmi:general#/definitions/Number",
            "symbolExpression": "%pp%stDisplayTemperature%/pp%"
          }
        ],
        "asyncWait": true
      },
      {
        "objectType": "Function",
        "active": true,
        "fn": "TcHmi.Functions.TestLabHMI.TemperatureDataExportToExcel",
        "fnParams": [
          {
            "objectType": "Symbol",
            "valueType": "tchmi:server#/definitions/PLC1.ST_DisplayTemperature",
            "symbolExpression": "%pp%stDisplayTemperature%/pp%"
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiContainer_9" data-tchmi-type="TcHmi.Controls.System.TcHmiContainer" data-tchmi-height-unit="px" data-tchmi-left="5" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="5" data-tchmi-bottom="0" data-tchmi-creator-visibility="Visible">
<div id="TcHmiTextblock_187" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="26" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="BaÅlangÄ±Ã§ ZamanÄ±" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-right="0" data-tchmi-text-vertical-alignment="Center">
</div>
<div id="TcHmiHtmlHost_1" data-tchmi-type="TcHmi.Controls.System.TcHmiHtmlHost" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top="26" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="0" data-tchmi-bottom="0" data-tchmi-grid-row-index="1">
    <label>
        <input id="StartDateInput" placeholder="ZamanÄ± SeÃ§in.." style="display:flex; height: 100%; width: 100%; background-color:black; color:white;" class=date />
    </label>
    <script>
        var fp = flatpickr(".date", {
            enableTime: true,
            dateFormat: "Y-m-d H:i",
            locale: "tr"
        })</script>
</div>
<!--<div id="CollapsedStartDate" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="26" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="150" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-visibility="Collapsed">
</div>-->
</div>
<div id="TcHmiContainer_10" data-tchmi-type="TcHmi.Controls.System.TcHmiContainer" data-tchmi-height-unit="px" data-tchmi-left="5" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="5" data-tchmi-bottom="0" data-tchmi-grid-row-index="1" data-tchmi-creator-visibility="Visible">
<div id="TcHmiTextblock_188" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="26" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="BitiÅ ZamanÄ±" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-right="0" data-tchmi-text-vertical-alignment="Center" data-tchmi-visibility="Visible">
</div>
<div id="TcHmiHtmlHost_2" data-tchmi-type="TcHmi.Controls.System.TcHmiHtmlHost" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top="26" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right="0" data-tchmi-bottom="0" data-tchmi-grid-row-index="1">

    <label>
        <input id="EndDateInput" placeholder="ZamanÄ± SeÃ§in.." style="display:flex; height: 100%; width: 100%; background-color:black; color:white;" class=date2 />
    </label>
    <script>
            var fp2 = flatpickr(".date2", {
                enableTime: true,
                dateFormat: "Y-m-d H:i",
                locale: "tr"
        })
    </script>

</div>
<!--<div id="CollapsedEndDate" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%s%PLC1.TemperatureDisplay.sEndDate|BindingMode=TwoWay%/s%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-word-wrap="true">
</div>-->
</div>
</div>
</div>
</div>